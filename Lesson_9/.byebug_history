exit
train.validate!
train = Train.new('aaa-aa', :cargo)
exit
train.type_if_inst
train = Train.new('aaa-aa', :cargo)
exit
train.type
train.type(:type, inst_var)
train.type(:type, Symbol, inst_var)
train = Train.new('aaa-aa', :cargo)
exit
train.type(:type, Symbol, inst_var)
train = Train.new('aaa-aa', :cargo)
exit
учше
train.type(:type, Symbol, inst_var)
train.type(:cargo, Symbol, inst_var)
train.validate!
train = Train.new('aaa-aa', :cargo)
train.type
train
вижу и другие ученики\
train.validate!
train = Train.new('aaa-aa', :cargo)
exit
train = Train.new('aaa-aa', :cargo)
train.validate!
train = Train.new('aaa-aa', :cargo)
exit
train.validate!
train = Train.new('aaa-aa', :cargo)
exit
train.validate!
train = Train.new('aaa-aa', :cargo)
train
train.validate!
exit
train.validate!
train = Train.new('aaa-aa', :cargo)
exit
учше
inst_var = instance_variable_get("@#{check[:name]}")
self.id
id
self
inst_var
 train.presence(:id, [], nil)
 train.presence(:id, [], 5)
inst_var
 train.presence(:id, [], inst_var)
train = Train.new('aaa-aa', :cargo)
 train.presence(:id, [], inst_var)
exit
 train.presence(:id, [], inst_var)
train.send(:presente, :id, [], inst_var)
train.validate!
train
train.send(:presente, :id, [], inst_var)
train.send(:presence, :id, [], inst_var)
train.send(:presente, :id, [], inst_var)
train.send(:presenc\e, :id, [], inst_var)
train.send(:presence, :id, [], inst_var)
train.send(:presence, :id, 1, inst_var)
train.send(:presence, :id, [], inst_var)
train = Train.new('aaa-aa', :cargo)
exit
inst_var
check[:args]
check[:name]
check[:type]
